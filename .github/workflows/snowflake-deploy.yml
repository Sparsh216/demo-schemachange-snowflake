# .github/workflows/snowflake-deploy.yml
name: Snowflake Schema Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, develop ]

jobs:
  deploy-snowflake-changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install schemachange
        run: |
          pip install --upgrade pip
          pip install "schemachange==4.0.1"

      # Write connections.toml with your secrets (NO domain in account)
      - name: Configure Snowflake connection (connections.toml)
        run: |
          mkdir -p ~/.snowflake
          cat > ~/.snowflake/connections.toml << EOF
          [ci]
          account   = "${{ secrets.SNOWFLAKE_ACCOUNT }}"   # e.g. ayvubxd-gmb14358 or ayvubxd-gmb14358.us-west-2
          user      = "${{ secrets.SNOWFLAKE_USER }}"
          role      = "${{ secrets.SNOWFLAKE_ROLE }}"
          warehouse = "${{ secrets.SNOWFLAKE_WAREHOUSE }}"
          database  = "${{ secrets.SNOWFLAKE_DATABASE }}"
          password  = "${{ secrets.SNOWFLAKE_PASSWORD }}"
          EOF
          # fix perms/owner so the connector doesn't complain/ignore it
          chown "$(whoami)" ~/.snowflake/connections.toml
          chmod 600 ~/.snowflake/connections.toml

      # Optional: fail early if any required secret is missing
      - name: Validate required secrets exist
        run: |
          for v in SNOWFLAKE_ACCOUNT SNOWFLAKE_USER SNOWFLAKE_ROLE SNOWFLAKE_WAREHOUSE SNOWFLAKE_DATABASE SNOWFLAKE_PASSWORD; do
            if [ -z "${{ secrets[$v] }}" ]; then
              echo "❌ Missing secret: $v"; exit 1
            fi
          done

      - name: Dry Run (PRs)
        if: github.event_name == 'pull_request'
        run: |
          schemachange \
            -f migrations \
            -c "${{ secrets.SNOWFLAKE_DATABASE }}.PUBLIC.CHANGE_HISTORY" \
            --create-change-history-table \
            --connection-name ci

      - name: Deploy (push to main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          schemachange \
            -f migrations \
            -c "${{ secrets.SNOWFLAKE_DATABASE }}.PUBLIC.CHANGE_HISTORY" \
            --create-change-history-table \
            --connection-name ci
