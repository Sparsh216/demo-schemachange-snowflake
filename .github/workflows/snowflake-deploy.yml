# .github/workflows/snowflake-deploy.yml
name: Snowflake Schema Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, develop ]

jobs:
  deploy-snowflake-changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install schemachange
        run: |
          pip install --upgrade pip
          pip install "schemachange==4.0.1"

      - name: Configure Snowflake connection (connections.toml)
        run: |
          mkdir -p ~/.snowflake
          cat > ~/.snowflake/connections.toml << EOF
          [ci]
          # e.g. ayvubxd-gmb14358 or ayvubxd-gmb14358.us-west-2 (NO .snowflakecomputing.com)
          account   = "${{ secrets.SNOWFLAKE_ACCOUNT }}"
          user      = "${{ secrets.SNOWFLAKE_USER }}"
          role      = "${{ secrets.SNOWFLAKE_ROLE }}"
          warehouse = "${{ secrets.SNOWFLAKE_WAREHOUSE }}"
          database  = "${{ secrets.SNOWFLAKE_DATABASE }}"
          password  = "${{ secrets.SNOWFLAKE_PASSWORD }}"
          EOF
          chown "$(whoami)" ~/.snowflake/connections.toml
          chmod 600 ~/.snowflake/connections.toml

      # ✅ Safe validation: export secrets to env, then check with bash (no GitHub expressions inside loop)
      - name: Validate required secrets exist
        env:
          SNOWFLAKE_ACCOUNT:   ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER:      ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_ROLE:      ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE:  ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_PASSWORD:  ${{ secrets.SNOWFLAKE_PASSWORD }}
        run: |
          missing=0
          for name in SNOWFLAKE_ACCOUNT SNOWFLAKE_USER SNOWFLAKE_ROLE SNOWFLAKE_WAREHOUSE SNOWFLAKE_DATABASE SNOWFLAKE_PASSWORD; do
            if [ -z "${!name}" ]; then
              echo "❌ Missing secret: $name"
              missing=1
            fi
          done
          if [ "$missing" -ne 0 ]; then
            exit 1
          fi
          echo "✅ All required secrets are present."

      - name: Dry Run (PRs)
        if: github.event_name == 'pull_request'
        run: |
          schemachange \
            -f migrations \
            -c "${{ secrets.SNOWFLAKE_DATABASE }}.PUBLIC.CHANGE_HISTORY" \
            --create-change-history-table \
            --connection-name ci

      - name: Deploy (push to main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          schemachange \
            -f migrations \
            -c "${{ secrets.SNOWFLAKE_DATABASE }}.PUBLIC.CHANGE_HISTORY" \
            --create-change-history-table \
            --connection-name ci
